@use '../forms';

$cutoff-width: 700px;
$row-gap: 5px;
$column-gap: 3px;
$total-input-height: calc(#{forms.$line-height} + #{forms.$input-border} + #{forms.$input-border}
+ #{forms.$input-margin} + #{forms.$input-margin} + #{forms.$input-padding} + #{forms.$input-padding});
$paragraph-width: 40em;

// Hide the link to the application in the header - we are already here!
section.adopt {
	display: none;
}

html {
	min-width: 480px;
}

body > article {
	width: 100%;
	text-align: center;
}

// Override this from common.css
p > strong:first-child {
	color: inherit;
}

#application {
	@include forms.fullwidth-form($cutoff-width);

	.explanatory {
		display: block;
		font-size: 70%;
		font-style: italic;
	}

	h2 {
		margin-top: 1em;
		margin-bottom: 1rem;
	}

	h3 {
		font-size: 18pt;
		font-variant: small-caps;
		margin-bottom: 1rem;
	}

	h4 {
		margin: 1rem;
	}

	// Basic information

	#basic_information {
		display: inline-block;
		max-width: 8.5in;
	}

	div.info_grid {
		display: grid;
		grid-template-columns: min-content 1fr 1fr;
		grid-auto-flow: column;
		column-gap: $column-gap;
		row-gap: $row-gap;
		margin: 8px;
		@media screen and (max-width: $cutoff-width) {
			display: block;
			margin: 0;
		}

		// Spacer occupying the top-left cell of the "table"
		> div.spacer {
			grid-column-start: 1;
			grid-row-start: 1;
		}

		> section {
			display: contents;
			@media screen and (max-width: $cutoff-width) {
				display: grid;
				grid-template-columns: min-content 20em;
				column-gap: $column-gap;
				row-gap: $row-gap;
				justify-content: center;
			}
			counter-reset: info-row;

			h4 {
				margin: 0;
				font-weight: inherit;
				@media screen and (max-width: $cutoff-width) {
					grid-column: 1/span 2 !important;
					font-weight: bold;
				}
			}

			> label, > div.label, > span[data-type='label'] {
				align-self: start;
				line-height: $total-input-height;
				vertical-align: middle;
				justify-self: end;
				white-space: nowrap;
				grid-column: 1;
				cursor: auto;

				> * {
					line-height: forms.$line-height;
					text-align: right;
					margin-top: -1em;
				}

				& + * {
					justify-self: stretch;
					align-self: center;
					width: auto;
					grid-column: 2;
					text-align: left;
				}

				&.span-2 {
					grid-row-end: span 2;
				}
			}

			&.applicant {
				> h4 {
					grid-column: 2;
					grid-row: 1;
				}
			}

			&.coapplicant {
				> h4 {
					grid-column: 3;
					grid-row: 1;
				}

				@media screen and (max-width: $cutoff-width) {
					margin-top: 1em;
				}

				> h4 + label + *, > h4 + div.label + *, > h4 + span[data-type='label'] + * {
					// Reset to row 2 when inserting the first coapplicant input
					grid-row: 2;
				}

				> label, > div.label, > span[data-type='label'] {
					display: none;
					@media screen and (max-width: $cutoff-width) {
						display: inline-block;
					}

					& + * {
						grid-column: 3;
						@media screen and (max-width: $cutoff-width) {
							grid-column: 2;
						}
					}
				}
			}
		}
	}

	.city-st-zip {
		margin-top: -$row-gap;
		white-space: nowrap;
		width: 100%;
		display: inline-flex;
		justify-content: space-between;

		label, span[data-type='label'] {
			display: none;
		}

		input, select, span[data-type='select'] {
			width: 0;
		}

		input:first-of-type, span[data-type='input']:first-of-type {
			flex-grow: 2;
		}

		// State
		select {
			width: 4em;
			font-size: 85%;
		}

		// ZIP
		input:nth-of-type(2), span[data-type='input']:nth-of-type(2) {
			flex-grow: 1;
		}
	}

	// Household information

	button.add, button.remove {
		> span {
			color: #0000;
			// TODO [$61f0e352d9ea4400084e2733]: uncomment once gradients can transition.
			//background: radial-gradient(circle, var(--inner-color) 20%, var(--outer-color) 100%);
			background-color: var(--inner-color);
			-webkit-background-clip: text;
			//noinspection CssInvalidPropertyValue
			background-clip: text;
			transition: forms.$transition-time;
		}
	}

	button.remove {
		--inner-color: #a44;
		--outer-color: #822;
		font-weight: bold;
		background: none;
		border: none;
		box-shadow: none;
		text-shadow: 0 0 1px #c000;

		&:hover:not(:active) {
			--inner-color: #0006;
			--outer-color: #0004;
			text-shadow: 1px -1px 1px #c00; // Actually appears on top of the X, because the X is the background.
		}

		&:active {
			--inner-color: #f00;
			--outer-color: #b00;
		}
	}

	button.add {
		justify-self: center;
		--inner-color: #4a4;
		--outer-color: #282;
		white-space: nowrap;
		margin-bottom: 1rem;

		&:hover {
			--inner-color: #393;
			--outer-color: #171;
		}

		&:active {
			--inner-color: #2f8f2f;
			--outer-color: #036903;
		}
	}

	// Other people in the household

	section#other_people {
		display: inline-block;
		max-width: 6in;

		h5 {
			margin: 0;
			font: inherit;
		}
	}

	div.people_table {
		display: grid;
		$spacer-width: 3em;
		grid-template-columns: minmax(0, $spacer-width) 1fr 10em 3em;
		margin-left: -$spacer-width;
		row-gap: $row-gap;
		column-gap: $column-gap;
		@media print {
			// Don't need the button column for printing.
			grid-template-columns: 0 1fr 10em;
		}

		> ul {
			display: contents;

			> li {
				display: contents;

				label {
					display: contents;

					> span {
						display: none;
					}
				}
			}
		}

		*:not(button.add) {
			justify-self: stretch;
			width: auto;
		}

		.name {
			grid-column: 2;
		}

		.dob {
			grid-column: 3;
		}

		.add {
			grid-column: 2 / span 4;
		}

		.remove {
			grid-column: 4;
		}
	}

	// Animals currently & no longer residing with you

	div.animals {
		display: grid;
		row-gap: $row-gap;
		column-gap: $column-gap;
		$spacer-width: minmax(0, 0.75em);
		--fixed-width: max-content;
		@media (max-width: 1000px) {
			--fixed-width: min-content;
		}
		$left-columns: [left] $spacer-width [name] 1fr [species] min-content [breed] 1fr [age] 3em [gender] min-content [spayed] var(--fixed-width);
		grid-template-columns: #{$left-columns} [remove content-right] 3em [right];
		@media (max-width: 600px) {
			grid-template-columns: [left name age remove] 1fr [species gender] min-content [breed spayed] 1fr [right content-right name];
			grid-auto-flow: column;
			h5 {
				display: none;
			}

			label > span, h6.legend {
				display: block !important;
				margin: calc(0.75em - #{$row-gap}) 0 0 0;
				padding: 0;
				font: inherit;
			}

			input.age, span[data-type='input'].age {
				max-width: 4em;
				justify-self: center !important;
			}

			fieldset > legend {
				display: block;
			}

			button.remove {
				margin-bottom: calc(2em - #{$row-gap});
				border-radius: 0;
				border-bottom: 1px solid forms.$border-color;
				justify-self: center !important;
				padding: forms.$input-padding 1em 1em 1em;
				font-size: 90%;

				&:hover:not(:active) {
					--inner-color: #c00;
					--outer-color: #c00;
					text-shadow: none;
				}

				span::after {
					content: ' Remove ' attr(data-name);
					font-weight: normal;
				}
			}
		}

		@media print {
			// Don't need the button column for printing.
			grid-template-columns: #{$left-columns} [right content-right];
		}

		> section {
			display: contents;
		}

		ul {
			display: contents;

			> li {
				display: contents;

				label {
					display: contents;

					> span {
						display: none;
					}
				}
			}
		}

		h4 {
			grid-column: left / right;
		}

		h5 {
			margin: 0;
			font: inherit;
			align-self: end;

			&.name {
				white-space: nowrap;
			}
		}

		*:not(button.add) {
			justify-self: stretch;
			width: auto;
		}

		.name {
			grid-column: name;
		}

		.species {
			grid-column: species;
		}

		.breed {
			grid-column: breed;
		}

		.age {
			grid-column: age;
		}

		.gender {
			grid-column: gender;
		}

		.spayed {
			grid-column: spayed;
		}

		.remove {
			grid-column: remove / right;
		}

		.add {
			grid-column: left / right;
		}

		.reason {
			grid-column: age / content-right;
		}

		div.fieldset {
			display: contents;

			h6.legend {
				display: none;
			}
		}

		fieldset, section[data-type='fieldset'] {
			border: none;
			display: flex;
			justify-content: space-evenly;
			padding: 0;

			legend, h3[data-type='legend'] {
				display: none;
			}

			> label, > span[data-type='label'] {
				display: flex !important;
				flex-direction: column;
				justify-content: center;
				height: $total-input-height;

				> span:not([data-type]) {
					display: block !important;
					white-space: nowrap;
					order: 2;
					margin: 0.2em;
				}

				> input, > span[data-type='input'] {
					order: 1;
				}
			}
		}
	}

	// Adoption information
	$box-width: 1em;
	$radio-margin-top: 0.2em;
	$radio-margin-left: 0.3em;

	input[type='checkbox'], input[type='radio'] {
		width: $box-width;
	}

	section#adoption_information {
		p {
			text-align: center;
			margin-bottom: 0;
			display: inline-block;
		}

		section#types_of_animals {
			display: grid;
			grid-template-columns: [start] 1fr [left] max-content [right] max-content 1fr [end];
			row-gap: $row-gap;
			column-gap: $column-gap;
			margin-bottom: 1em;

			> p, > div {
				grid-column: start / end;
				align-self: end;
				justify-self: center;
			}

			> label, > span[data-type='label'] {
				justify-self: start;
				margin: 0.1em 0;
			}

			> label:nth-of-type(odd), > span[data-type='label']:nth-of-type(odd) {
				grid-column: left;
				margin-left: -$box-width; // Disregard the left checkbox when centering, for optical reasons.
				margin-right: 2em;
			}

			> label:nth-of-type(even), > span[data-type='label']:nth-of-type(even) {
				grid-column: right;
			}

			label[for='other_specify'], div.other>span[data-type='label'][data-input-type='text'] {
				display: none;
			}

			span.other_label::after {
				content: ': ';
			}

			> div.other > input:disabled {
				pointer-events: none;
			}
		}

		div.preference, section#particular > div {
			white-space: nowrap;
			display: inline-block;

			> label, > span[data-type='label'] {
				white-space: nowrap;
				margin: $radio-margin-top $radio-margin-left;
			}
		}

		section#particular > label, section#particular > span[data-type='label'] {
			display: block;
		}
	}

	// About your home
	section#about_home {
		label.textarea {
			display: flex;
			flex-direction: column;

			> textarea {
				align-self: center;
				width: $paragraph-width;
				max-width: 90vw;
				height: 6em;
			}

			> span {
				cursor: auto;
			}
		}

		div.residence_grid {
			display: grid; // inline-grid jumps around when the rented paragraph is shown for some reason
			row-gap: $row-gap;
			column-gap: $column-gap;
			grid-template-columns: 1fr repeat(7, max-content) 1fr;
			margin: 0.5em;

			> input, > span[data-type='input'] {
				margin-left: $radio-margin-left;
				margin-top: 0;
				height: forms.$line-height;
			}

			> label, > span[data-type='label'] {
				margin-right: $radio-margin-left;
				justify-self: start;
			}

			> p {
				grid-column: 2;
				margin: 0 $radio-margin-left 0 0;
				justify-self: end;
			}
		}

		p.rented:not(.hidden) {
			max-width: 40em;
			display: inline-block;
			text-align: justify;
			text-align-last: center;
			font-style: italic;
			font-size: 90%;
		}

		section#outside {
			display: block;
			$vertical-space: 1em;
			margin: $vertical-space 0;

			> div > p {
				display: inline-block;
				margin-bottom: $row-gap;
			}

			> div.fieldset {
				display: inline-grid;
				grid-template-columns: repeat(4, max-content);
				margin: $vertical-space 0;
				border: none;
				column-gap: $column-gap;
			}

			fieldset {
				display: contents;

				> * {
					justify-self: center;
				}

				> legend {
					grid-column: 1/span 4;
					grid-row: 1;
				}

				> input {
					grid-row: 2;
					justify-self: stretch;
					width: auto;
					height: $box-width;
				}

				> label {
					grid-row: 3;
					margin: 0 $radio-margin-left;
					padding: 0 $radio-margin-left;
				}
			}

			section[data-type='fieldset'] {
				h3 {
					display: inline;
					font: inherit;
					margin: 0.2em;
				}
			}

			& + label, & + span[data-type='label'] {
				// Where will the pet sleep at night?
				display: block;
				margin: $vertical-space 0;

				> span:not([data-type]) {
					display: block;
				}

				> input {
					width: 40em;
					max-width: 90vw;
				}
			}
		}

		label.textarea > span {
			max-width: $paragraph-width;
			text-align: justify;
			text-align-last: center;
			margin-left: auto;
			margin-right: auto;
		}
	}

	// References

	section#references > div {
		display: grid;
		grid-template-columns: 1fr minmax(0, 15em) minmax(0, 20em) min-content 1fr;
		align-items: center;
		row-gap: 0.5em;
		column-gap: $column-gap;

		.explanatory {
			font-size: 80%;
		}

		> section {
			display: contents;

			> div:first-child {
				grid-column: 2;
				text-align: right;
				margin-right: 0.5em;

				h4 {
					margin: 0.2rem 0;
				}
			}

			&#veterinarian > div:first-child {
				grid-row-end: span 3;
			}

			&#personal_reference > div:first-child {
				grid-row-end: span 4;
			}

			> div:nth-child(2) {
				display: contents;

				input, textarea, span[data-type='input'], pre {
					grid-column: 3;
					justify-self: stretch;
					width: auto;
					margin: 0;
				}

				label, span[data-type='label'] {
					grid-column: 4;
					justify-self: start;
					text-align: left;
				}
			}

			div.spacer {
				grid-column: 3/span 2;
				height: 0.5em;
			}
		}

		> div.spacer {
			grid-column: 1/span 5;
			height: 1em;
		}
	}

	section#attachments {
		> div {
			margin: 1em;

			p {
				max-width: $paragraph-width;
				margin: 1em auto;
			}
		}
	}

	section#comments textarea {
		width: $paragraph-width;
		max-width: 90vw;
		height: 5em;
	}

	section#submit button {
		margin-top: 1rem;
		font-size: 120%;
		padding: 0.5em;
	}
}

// Styles for email
section.thanks {
	padding-bottom: 1em;
	margin-bottom: 1em;
	border-bottom: 1pt solid forms.$border-color;
}

article#application {
	h3 {
		width: 100%;
	}

	.city-st-zip {
		display: inline;

		span[data-type]:not([data-type='label']) {
			display: inline;
			width: auto;

			&::after {
				content: ' ';
			}
		}
	}

	div.info_grid {
		column-gap: 0.5em;
	}

	div.people_table {
		grid-template-columns: 1fr minmax(min-content, max-content) max-content 1fr;
		margin-left: 0;
	}

	div.people_table, div.animals {
		grid-auto-flow: column;
		column-gap: 0.5em;

		h5 {
			font-weight: bold !important;
		}
	}

	span.other_label {
		display: inline !important;
	}

	span[data-type='label'][data-selected='0'] > span.other_label::after {
		display: none;
	}

	#particular span[data-type='input'] {
		margin: 0.2em;
		font-weight: bold;
	}

	#attachments ul.thumbnails {
		list-style-type: none;
		display: inline;
		margin: 0.2rem;
	}

	span.textarea {
		display: block;
	}

	pre[data-type='textarea']:not(#vet_address), span.sleep {
		font: inherit;
		border: 1px solid black;
		display: block;
		margin: 0.2em auto;
		padding: 0.2em;
		min-height: 3em;
		max-width: $paragraph-width;
		width: auto;
	}

	pre#vet_address {
		margin: 0;
		font: inherit;
	}

	section.applicant span.explanatory {
		display: none;
	}
}
