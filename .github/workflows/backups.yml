# Copyright 2022 Google LLC
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

name: Nightly backups
on:
  schedule:
    - cron: '10 10 * * *'
  workflow_dispatch:
jobs:
  backup_asm:
    runs-on: ubuntu-latest
    steps:
      - name: Install rclone
        run: sudo apt install -y rclone
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.ASM_SSH_KEY }}
          name: id_rsa
          known_hosts: ${{ secrets.ASM_KNOWN_HOSTS }}
      - name: Dump ASM
        run: ssh ${{ secrets.ASM_SSH_USER }}@${{ secrets.ASM_HOST }} "mysqldump -f --single-transaction -u ${{ secrets.ASM_DB_USER }} -p'${{ secrets.ASM_DB_PASS }}' ${{ secrets.ASM_DB }} | gzip -9" > asm-$(date +%Y%m%d).sql.gz
      - name: Upload to S3
        run: rclone -vv --s3-access-key-id=${{ secrets.S3_ACCESS_KEY }} --s3-secret-access-key=${{ secrets.S3_SECRET_KEY }} --s3-endpoint=${{ secrets.S3_ENDPOINT }} --s3-region=${{ secrets.S3_REGION }} copy asm-*.sql.gz :s3:${{ secrets.DATA_BUCKET }}/
  backup_blog:
    runs-on: ubuntu-latest
    steps:
      - name: Install rclone
        run: sudo apt install -y rclone
      - name: Dump blog database
        run: mysqldump -f --single-transaction -h ${{ secrets.DB_HOST }} -u ${{ secrets.DB_USER }} -p'${{ secrets.DB_PASS }}' ${{ secrets.BLOG_DB }} | gzip -9 > blog-$(date +%Y%m%d).sql.gz
      - name: Upload database dump to S3
        run: rclone -vv --s3-access-key-id=${{ secrets.S3_ACCESS_KEY }} --s3-secret-access-key=${{ secrets.S3_SECRET_ACCESS_KEY }} --s3-endpoint=${{ secrets.S3_ENDPOINT }} --s3-region=${{ secrets.S3_REGION }} copy blog-*.sql.gz :s3:${{ secrets.DATA_BUCKET }}/
      - name: Sync blog directory
        run: rclone -vv --sftp-host ${{ secrets.PROD_SFTP_HOST }} --sftp-user ${{ secrets.PROD_SFTP_USER }} --sftp-pass `rclone obscure '${{ secrets.PROD_SFTP_PASS }}'` --s3-access-key-id=${{ secrets.S3_ACCESS_KEY }} --s3-secret-access-key=${{ secrets.S3_SECRET_KEY }} --s3-endpoint=${{ secrets.S3_ENDPOINT }} --s3-region=${{ secrets.S3_REGION }} sync :sftp:${{ secrets.PROD_SITE_ROOT }}/public/blog/ :s3:${{ secrets.ASSETS_BUCKET }}/blog/
  backup_assets:
    runs-on: ubuntu-latest
    steps:
      - name: Install rclone
        run: sudo apt install -y rclone
      - name: Sync assets
        run: rclone -vv --sftp-host ${{ secrets.PROD_SFTP_HOST }} --sftp-user ${{ secrets.PROD_SFTP_USER }} --sftp-pass `rclone obscure '${{ secrets.PROD_SFTP_PASS }}'` --s3-access-key-id=${{ secrets.S3_ACCESS_KEY }} --s3-secret-access-key=${{ secrets.S3_SECRET_KEY }} --s3-endpoint=${{ secrets.S3_ENDPOINT }} --s3-region=${{ secrets.S3_REGION }} sync :sftp:${{ secrets.PROD_SITE_ROOT }}/public/assets/stored/ :s3:${{ secrets.ASSETS_BUCKET }}/assets/
