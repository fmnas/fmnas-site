# Copyright 2022 Google LLC
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

name: Check for failed application submissions
on:
  schedule:
    - cron: '22 */6 * * *'
  workflow_dispatch:
jobs:
  check-applications:
    runs-on: ubuntu-latest
    steps:
      - name: Collect serialized applications
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PROD_SFTP_HOST }}
          username: ${{ secrets.PROD_SFTP_USER }}
          password: ${{ secrets.PROD_SFTP_PASS }}
          script: |
            cd ${{ secrets.PROD_SITE_ROOT }}/public/application/received
            tar -czvf serialized.tar.gz *.serialized 2>/dev/null || exit 0
      - name: Fetch serialized applications
        run: sshpass -p "${{ secrets.PROD_SFTP_PASS }}" scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ${{ secrets.PROD_SFTP_USER }}@${{ secrets.PROD_SFTP_HOST}}:${{ secrets.PROD_SITE_ROOT }}/public/application/received/serialized.tar.gz .
      - name: Count serialized applications
        id: count
        run: echo "::set-output name=count::$(tar -tzf serialized.tar.gz | wc -l)"
      - name: Wait 3 minutes if there are serialized applications
        if: steps.count.outputs.count != 0
        run: sleep 180
      - name: Collect serialized applications again
        if: steps.count.outputs.count != 0
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PROD_SFTP_HOST }}
          username: ${{ secrets.PROD_SFTP_USER }}
          password: ${{ secrets.PROD_SFTP_PASS }}
          script: |
            cd ${{ secrets.PROD_SITE_ROOT }}/public/application/received
            tar -czvf serialized2.tar.gz *.serialized 2>/dev/null || exit 0
      - name: Fetch serialized applications again
        if: steps.count.outputs.count != 0
        run: sshpass -p "${{ secrets.PROD_SFTP_PASS }}" scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ${{ secrets.PROD_SFTP_USER }}@${{ secrets.PROD_SFTP_HOST}}:${{ secrets.PROD_SITE_ROOT }}/public/application/received/serialized2.tar.gz .
      - name: Identify broken applications
        if: steps.count.outputs.count != 0
        id: diff
        run: |
          comm -12 <(tar -tzf serialized.tar.gz | sort) <(tar -tzf serialized2.tar.gz | sort) | tee common.txt
          echo "::set-output name=count::$(wc -l < common.txt)"
      - name: Compress serialized applications that are still around
        if: steps.count.outputs.count != 0 && steps.diff.outputs.count != 0
        run: |
          tar -xzf serialized.tar.gz --files-from common.txt
          tar -czf common.tar.gz --files-from common.txt
      - name: Mail broken applications to admin
        if: steps.count.outputs.count != 0 && steps.diff.outputs.count != 0
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.SMTP_HOST }}
          server_port: ${{ secrets.SMTP_PORT }}
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: ${{ steps.diff.outputs.count }} serialized applications failed to send
          to: admin@forgetmenotshelter.org
          from: FMNAS Automation <admin+automation@forgetmenotshelter.org>
          body: See attached applications.
          attachments: common.tar.gz
      - name: Update badge (ok)
        if: steps.count.outputs.count == 0 || steps.diff.outputs.count == 0
        uses: schneegans/dynamic-badges-action@v1.1.0
        with:
          auth: ${{ secrets.TORTOISEWRATH_GIST_TOKEN }}
          gistID: e38e961e5c08b2bdf4d78c800d851203
          filename: applications.json
          label: failed applications
          message: 0
          color: '090'
      - name: Update badge (fail)
        if: steps.count.outputs.count != 0 && steps.diff.outputs.count != 0
        uses: schneegans/dynamic-badges-action@v1.1.0
        with:
          auth: ${{ secrets.TORTOISEWRATH_GIST_TOKEN }}
          gistID: e38e961e5c08b2bdf4d78c800d851203
          filename: applications.json
          label: failed applications
          message: ${{ steps.diff.outputs.count }}
          color: critical
