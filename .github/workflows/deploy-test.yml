# Copyright 2022 Google LLC
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Deploy test branch to fmnas.org on push
name: Deploy test site
on:
  push:
    branches:
      - test
jobs:
  deploy:
    name: Deploy test website
    runs-on: ubuntu-latest
    outputs:
      build-status: ${{ steps.build-success.outcome }}
      deploy-status: ${{ steps.deploy-success.outcome }}
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}
      - name: Checkout test
        uses: actions/checkout@main
        with:
          ref: test
      - name: Create local branch
        run: git checkout -b test_deployment
      - name: Remove unneeded directories
        run: rm -rf .github .idea gcp tests
      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
      - name: Install dev dependencies
        run: npm install
      - name: Cache PHP dependencies
        uses: actions/cache@v2
        with:
          path: /tmp/composer-cache
          key: ${{ runner.os }}-${{ hashFiles('composer.lock') }}
      - name: Install PHP dependencies
        uses: php-actions/composer@v6
        with:
          args: --ignore-platform-reqs
      - name: Compile public site stylesheets
        run: npx sass --style=compressed public:public
      - name: Compile public site scripts
        run: npm run build
      - name: Build admin client
        run: npx vite build admin/client
      - name: Set config values
        id: build-success
        run: |
          npx ts-node handleparse.ts secrets/config.php.hbs \
          --db_name="${{ secrets.TEST_DB_NAME }}" \
          --db_username="${{ secrets.DB_USERNAME }}" \
          --db_pass="${{ secrets.DB_PASS }}" \
          --db_host="${{ secrets.DB_HOST }}" \
          --smtp_host="${{ secrets.SMTP_HOST }}" \
          --smtp_auth="${{ secrets.SMTP_AUTH }}" \
          --smtp_security="${{ secrets.SMTP_SECURITY }}" \
          --smtp_port="${{ secrets.SMTP_PORT }}" \
          --smtp_username="${{ secrets.SMTP_USERNAME }}" \
          --smtp_password="${{ secrets.SMTP_PASSWORD }}" \
          --image_size_endpoint="${{ secrets.IMAGE_SIZE_TEST_ENDPOINT }}" \
          --resize_image_endpoint="${{ secrets.RESIZE_IMAGE_TEST_ENDPOINT }}" \
          --asm_db="${{ secrets.ASM_WEB_DB }}" \
          --asm_host="${{ secrets.ASM_WEB_HOST }}" \
          --asm_user="${{ secrets.ASM_WEB_USER }}" \
          --asm_pass="${{ secrets.ASM_WEB_PASS }}" \
          --print_pdf_endpoint="${{ secrets.PRINT_PDF_TEST_ENDPOINT }}" \
          --minify_html_endpoint="${{ secrets.MINIFY_HTML_TEST_ENDPOINT }}" \
          --ga_id="${{ secrets.TEST_GA_ID }}" \
          --api_credentials="${{ secrets.HTTP_CREDENTIALS }}" \
          --static_bucket="${{ secrets.TEST_STATIC_BUCKET }}" \
          --static_domain="${{ secrets.TEST_STATIC_DOMAIN }}"
      - name: Unignore config.php for upload
        run: echo '!secrets/config.php' | tee -a .gitignore
      - name: Write service_account.json
        run: echo '${{ secrets.SERVICE_ACCOUNT_JSON }}' > secrets/service_account.json
      - name: Unignore service_account.json for upload
        run: echo '!secrets/service_account.json' | tee -a .gitignore
      - name: Unignore vendor directory for upload
        run: sed -i '/\/vendor\//d' .gitignore
      - name: Unignore compiled files for upload
        run: |
          sed -i -E "/\.(css|js|map)$/d" public/.gitignore
          rm admin/.gitignore
      - name: Restrict access to test site
        run: cat public/.htaccess-test | tee -a public/.htaccess
      - name: Restrict access to admin site
        run: cat admin/.htaccess-test | tee -a admin/.htaccess
      - name: Commit changes to local branch
        run: |
          git config user.email "admin+automation@forgetmenotshelter.org"
          git config user.name "FMNAS Automation"
          git add .
          git commit -am "Automated changes for deployment"
      - name: Wait for GCP deployment
        uses: lewagon/wait-on-check-action@master
        with:
          ref: test
          check-regexp: 'GCP:.*'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10
      - name: Install sshpass
        run: |
          sudo apt update
          sudo apt install sshpass
      - name: SFTP upload
        id: deploy-success
        uses: SamKirkland/web-deploy@v1
        with:
          target-server: ${{ secrets.TEST_SFTP_HOST }}
          remote-user: ${{ secrets.TEST_SFTP_USER }}
          private-ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
          destination-path: ${{ secrets.TEST_SITE_ROOT }}/
          rsync-options: --archive --links --compress --rsh "sshpass -p '${{ secrets.TEST_SFTP_PASS }}' ssh -o StrictHostKeyChecking=no"
  invalidate-descriptions:
    name: Invalidate description cache
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}
      - name: Checkout test
        uses: actions/checkout@main
        with:
          ref: test
          fetch-depth: 0
      - name: Test changed files
        id: changed-files
        uses: tj-actions/changed-files@v15
        with:
          files: |
            src/assets.php
            src/parser.php
            src/pet.php
            composer.json
      - name: Delete cached descriptions
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.TEST_SFTP_HOST }}
          username: ${{ secrets.TEST_SFTP_USER }}
          password: ${{ secrets.TEST_SFTP_PASS }}
          script: rm ${{ secrets.TEST_SITE_ROOT }}/public/assets/cache/*.html || echo "Error $?"
  invalidate-config:
    name: Invalidate configuration cache
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}
      - name: Checkout test
        uses: actions/checkout@main
        with:
          ref: test
          fetch-depth: 0
      - name: Test changed files
        id: changed-files
        uses: tj-actions/changed-files@v15
        with:
          files: |
            src/db.php
            src/generator.php
      - name: Delete generated.php
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.TEST_SFTP_HOST }}
          username: ${{ secrets.TEST_SFTP_USER }}
          password: ${{ secrets.TEST_SFTP_PASS }}
          script: rm ${{ secrets.TEST_SITE_ROOT }}/src/generated.php || echo "Error $?"
      - name: Request config regeneration
        if: steps.changed-files.outputs.any_changed == 'true'
        run: curl -f -u ${{ secrets.HTTP_CREDENTIALS }} https://${{ secrets.TEST_ADMIN_DOMAIN }}/api/regenerate
  invalidate-images:
    name: Invalidate image cache
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}
      - name: Checkout test
        uses: actions/checkout@main
        with:
          ref: test
          fetch-depth: 0
      - name: Test changed files
        id: changed-files
        uses: tj-actions/changed-files@v15
        with:
          files: |
            src/resize.php
            gcp/resize-image/**
            gcp/image-size/**
      - name: Request image regeneration
        if: steps.changed-files.outputs.any_changed == 'true'
        run: curl -f -u ${{ secrets.HTTP_CREDENTIALS }} https://${{ secrets.TEST_ADMIN_DOMAIN }}/api/regen_images
  invalidate-analytics:
    name: Invalidate local analytics
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}
      - name: Checkout test
        uses: actions/checkout@main
        with:
          ref: test
          fetch-depth: 0
      - name: Test changed files
        id: changed-files
        uses: tj-actions/changed-files@v15
        with:
          files: src/analytics.php
      - name: Rename analytics file
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.TEST_SFTP_HOST }}
          username: ${{ secrets.TEST_SFTP_USER }}
          password: ${{ secrets.TEST_SFTP_PASS }}
          script: |
            cd ${{ secrets.TEST_SITE_ROOT }}/secrets
            if [ ! -f analytics.db ]; then exit 0; fi
            mv $(readlink -f analytics.db) analytics_$(date +%s).db
            rm analytics.db
  badge:
    name: Update status badge
    if: ${{ always() }}
    needs:
      - deploy
      - invalidate-descriptions
      - invalidate-config
      - invalidate-images
      - invalidate-analytics
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}
      - name: Check status
        run: |
          if [[ "${{ needs.deploy.outputs.build-status }}" != "success" ]]; then result=failing; color=critical
          elif [[ "${{ needs.deploy.outputs.deploy-status }}" != "success" ]]; then result=stale; color=important
          elif [[ "${{ needs.invalidate-descriptions.result }}" != "success" ]]; then result=descriptions; color=critical
          elif [[ "${{ needs.invalidate-config.result }}" != "success" ]]; then result=config; color=critical
          elif [[ "${{ needs.invalidate-images.result }}" != "success" ]]; then result=images; color=important
          elif [[ "${{ needs.invalidate-analytics.result }}" != "success" ]]; then result=analytics; color=important
          else result=ok; color=090
          fi
          echo "color=$color" | tee -a $GITHUB_ENV
          echo "result=$result" | tee -a $GITHUB_ENV
      - name: Update badge
        uses: schneegans/dynamic-badges-action@v1.1.0
        with:
          auth: ${{ secrets.TORTOISEWRATH_GIST_TOKEN }}
          gistID: e38e961e5c08b2bdf4d78c800d851203
          filename: deploy-test.json
          label: test
          message: ${{ env.result }}
          namedLogo: php
          logoColor: ccc
          color: ${{ env.color }}
